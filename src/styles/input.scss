@mixin input-border-radius(
  $suffix: "big",
  $border-radius: var(--s-border-radius-big)
) {
  &.s-border-radius {
    &-#{$suffix} {
      border-radius: $border-radius;
    }
  }
}

$input-icon-width: 18px;
$input-border-width: 1px;
$input-padding-top: $s-basic-spacing * 2 - $input-border-width;
$input-padding-left: $s-basic-spacing * 2 - $input-border-width;

.s-input {
  display: flex;
  flex-direction: column;
  justify-content: center;

  background-color: var(--s-color-base-background);
  border-color: var(--s-color-base-background);
  border-style: solid;
  border-width: $input-border-width;
  font-family: $s-font-family-default;
  min-height: $s-size-big;
  padding: $input-padding-top $input-padding-left;
  position: relative;
  width: 100%;

  @include input-border-radius;
  @include input-border-radius("medium", var(--s-border-radius-medium));
  @include input-border-radius("small", var(--s-border-radius-small));
  @include input-border-radius("mini", var(--s-border-radius-mini));

  &__content {
    display: flex;
    align-items: center;
    width: 100%;
  }

  &__input {
    flex: 1;
    position: relative;
  }

  &.s-size-medium {
    min-height: $s-size-medium;
  }

  &.s-size-small {
    min-height: $s-size-small;
  }

  .s-placeholder {
    // TODO: add default animation from material-ui
    color: var(--s-color-base-content-tertiary);
    text-align: left;
    font-size: var(--s-font-size-mini);
    line-height: 1.5;
    z-index: 1;
    pointer-events: none;
    position: absolute;
    top: -3px;

    & + .el-input, & + .el-textarea {
      padding-top: $s-basic-spacing * 2;

      .el-input__validateIcon {
        padding-top: 11px;
      }
    }
  }

  &:hover {
    background-color: var(--s-color-base-background-hover);
    border-color: var(--s-color-base-background-hover);
  }

  &.s-focused {
    background-color: var(--s-color-utility-surface);
    border-color: var(--s-color-base-border-primary);
  }

  &.s-disabled {
    color: var(--s-color-base-content-quaternary);
    background-color: var(--s-color-base-disabled);
    border-color: var(--s-color-base-disabled);

    .s-placeholder {
      color: var(--s-color-base-content-quaternary);
    }
  }

  &.s-autofill {
    background: rgb(232, 240, 254); // chrome auto-fill background
  }

  &--prefix:not(.s-textarea) {
    .s-placeholder {
      padding-left: $input-icon-width + $s-basic-spacing;
    }
  }

  &--suffix:not(.s-textarea) {
    .s-placeholder {
      padding-right: $input-icon-width + $s-basic-spacing;
    }
  }

  .el-input, .el-textarea {
    font-size: inherit;
    position: unset;

    [class^="el-input__count"] {
      background-color: transparent;
    }

    &.is-disabled {
      .el-input__inner {
        background-color: transparent;
        color: inherit;
      }
    }

    &__inner {
      height: auto;
      line-height: 1.5;
      border: none;
      border-radius: 0;
      background-color: transparent;
      padding: 0;
      text-align: left;

      &::placeholder {
        color: var(--s-color-base-content-tertiary);
        opacity: 1; // Firefox
      }
    }

    &__icon {
      line-height: 1;
      width: $input-icon-width;
    }

    &__prefix {
      z-index: 1;
      left: 0;
    }

    &__suffix {
      z-index: 1;
      right: 0;

      &-inner {
        display: flex;
        align-items: center;
        height: 100%;
      }
    }

    &--prefix {
      .el-input__inner {
        padding-left: $input-icon-width + $s-basic-spacing;
      }
    }
    &--suffix {
      .el-input__inner {
        padding-right: $input-icon-width + $s-basic-spacing;
      }
    }
  }
  .el-input > input {
    &:-webkit-autofill {
      color: var(--s-color-base-content-primary) !important;
      animation-name: onAutoFillStart; // Expose a hook for JavaScript when auto fill is shown

      // removing user-agent background with hack
      transition: background-color 5000s ease-in-out 0s;
    }
    &:not(:-webkit-autofill) {
      animation-name: onAutoFillCancel; // Expose a hook for JS onAutoFillCancel
    }
    &:-internal-autofill-selected {
      animation-name: onAutoFillStart;
    }
    &:not(:-internal-autofill-selected) {
      animation-name: onAutoFillCancel;
    }
  }

  &.s-text-file {
    .el-input > input {
      padding-right: 56px;
    }
    .s-icon-file-file-upload-24 {
      right: 0;
      font-size: var(--s-icon-font-size-big);
      z-index: 2;
      position: absolute;
      cursor: pointer;
      + input {
        cursor: pointer;
        position: absolute;
        opacity: 0;
        top: 0;
        right: 0;
        width: 56px;
        height: 100%;
        z-index: 1;
      }
    }
  }
}
.el-input__inner, .el-textarea__inner {
  color: var(--s-color-base-content-primary);
}
@keyframes onAutoFillStart {
  from {/**/}
  to {/**/}
}
@keyframes onAutoFillCancel {
  from {/**/}
  to {/**/}
}
