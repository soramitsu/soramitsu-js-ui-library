@mixin input-border-radius(
  $suffix: "big",
  $border-radius: var(--s-border-radius-big)
) {
  &.s-border-radius {
    &-#{$suffix} {
      border-radius: 0;
      .s-placeholder {
        border-top-left-radius: $border-radius;
      }
      .el-input,
      .el-textarea {
        > input,
        > textarea {
          border-radius: $border-radius;
        }
      }
    }
  }
}

.s-input {
  font-family: $s-font-family-default;
  width: 100%;
  min-height: $s-size-big;
  position: relative;
  @include input-border-radius;
  @include input-border-radius("medium", var(--s-border-radius-medium));
  @include input-border-radius("small", var(--s-border-radius-small));
  @include input-border-radius("mini", var(--s-border-radius-mini));
  .el-input__suffix {
    z-index: 1;
  }
  .s-placeholder {
    // TODO: add default animation from material-ui
    color: var(--s-color-base-content-tertiary);
    text-align: left;
    font-size: 12px;
    padding: 0 15px;
    padding-top: 5px;
    top: 1px;
    left: 1px;
    position: absolute;
    z-index: 1;
    width: calc(100% - 15px);
    background-color: var(--s-color-base-background);
    pointer-events: none;
  }
  .el-input,
  .el-textarea {
    height: 100%;
    > input,
    > textarea {
      height: $s-size-big;
      border: 1px solid var(--s-color-base-background);
      background-color: var(--s-color-base-background);
      &::placeholder {
        color: var(--s-color-base-content-tertiary);
        opacity: 1; // Firefox
      }
    }
    > textarea {
      padding-top: 12px;
    }
    [class^="el-input__count"] {
      background-color: transparent;
    }
  }
  &:hover {
    .s-placeholder,
    .el-input > input,
    .el-textarea > textarea {
      background-color: var(--s-color-base-background-hover);
    }
    .el-input > input,
    .el-textarea > textarea {
      border-color: var(--s-color-base-background-hover);
    }
  }
  &.s-size-medium {
    min-height: $s-size-medium;

    .el-input,
    .el-textarea {
      height: 100%;
      > input,
      > textarea {
        height: $s-size-medium;
      }
    }
  }
  &.s-focused {
    .s-placeholder,
    .el-input > input,
    .el-textarea > textarea {
      background-color: var(--s-color-utility-surface);
    }
    .el-input > input,
    .el-textarea > textarea {
      border-color: var(--s-color-base-border-primary);
    }
  }
  &.s-disabled {
    .s-placeholder,
    .el-input > input,
    .el-textarea > textarea {
      color: var(--s-color-base-content-quaternary);
      background-color: var(--s-color-base-disabled);
    }
    .el-input > input,
    .el-textarea > textarea {
      border-color: var(--s-color-base-disabled);
    }
  }
  &.s-autofill {
    .s-placeholder {
      background-color: transparent !important;
    }
  }
  .el-input > input {
    &:-webkit-autofill {
      color: var(--s-color-base-content-primary) !important;
      animation-name: onAutoFillStart; // Expose a hook for JavaScript when auto fill is shown
    }
    &:not(:-webkit-autofill) {
      animation-name: onAutoFillCancel; // Expose a hook for JS onAutoFillCancel
    }
    &:-internal-autofill-selected {
      animation-name: onAutoFillStart;
    }
    &:not(:-internal-autofill-selected) {
      animation-name: onAutoFillCancel;
    }
  }
  .s-placeholder + .el-input {
    > input {
      padding-top: 12px;
    }
    .el-input__validateIcon {
      padding-top: 11px;
    }
  }
  .s-placeholder + .el-textarea > textarea {
    padding-top: 24px;
  }
  &.s-text-file {
    .el-input > input {
      padding-right: 56px;
    }
    .s-icon-file-upload {
      top: 16px;
      right: 16px;
      font-size: 24px;
      z-index: 1;
      position: absolute;
      + input {
        cursor: pointer;
        position: absolute;
        opacity: 0;
        top: 0;
        right: 0;
        width: 56px;
        height: 100%;
        z-index: 2;
      }
    }
  }
}
.el-input__inner, .el-textarea__inner {
  color: var(--s-color-base-content-primary);
}
@keyframes onAutoFillStart {
  from {/**/}
  to {/**/}
}
@keyframes onAutoFillCancel {
  from {/**/}
  to {/**/}
}
